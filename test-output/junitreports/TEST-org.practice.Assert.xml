<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="10" hostname="DESKTOP-C1OCHCD" name="org.practice.Assert" tests="15" failures="1" timestamp="2022-09-02T08:33:03 IST" time="0.245" errors="0">
  <testcase name="tc02" time="0.115" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc03" time="0.002" classname="org.practice.Assert"/>
  <system-out/>
  <testcase name="tc02" time="0.004" classname="org.practice.Assert">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at org.practice.Assert.tc02(Assert.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.008" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc01" time="0.024" classname="org.practice.Assert"/>
  <system-out/>
  <testcase name="tc02" time="0.002" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.026" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.008" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.002" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.009" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.007" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc05" time="0.005" classname="org.practice.Assert"/>
  <system-out/>
  <testcase name="tc04" time="0.011" classname="org.practice.Assert"/>
  <system-out/>
  <testcase name="tc02" time="0.011" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
  <testcase name="tc02" time="0.011" classname="org.practice.Assert">
    <skipped/>
  </testcase> <!-- tc02 -->
  <system-out/>
</testsuite> <!-- org.practice.Assert -->
